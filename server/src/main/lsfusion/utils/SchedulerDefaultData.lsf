MODULE SchedulerDefaultData;

REQUIRE Scheduler, DefaultData;

NAMESPACE Scheduler;

loadDefaultScheduledTasks '{scheduler.default.data.load.default.scheduled.tasks}' ()  ABSTRACT LIST ( ) IN loadDefault;
@implementLoadDefaultData(loadDefaultScheduledTasks);

loadDefaultScheduledTask '{scheduler.default.data.load.default.scheduled.task}'(STRING[100] iname, DATETIME startTime, INTEGER integer, SchedulerStartType type)  { 
    NEW s = UserScheduledTask {
        name(s) <- iname;
        active(s) <- TRUE ;
        startDate(s) <- startTime;
        period(s) <- integer; 
        schedulerStartType(s) <- type;
    }
}

loadDefaultScheduledTaskDetail '{scheduler.default.data.load.default.scheduled.task.detail}'(STRING[100] iname, INTEGER order, STRING prop)  { 
    NEW d = UserScheduledTaskDetail {
        order(d) <- order;
        active(d) <- TRUE;
        action(d) <- actionCanonicalName(prop);         
        scheduledTask(d) <- scheduledTask(iname);
    }
}

loadDefaultScheduledTasks () + {        
    loadDefaultScheduledTask ('{scheduler.default.data.load.default.service.db}', 2014_07_01_03:00, 86400, SchedulerStartType.afterStart);
    loadDefaultScheduledTaskDetail ('{scheduler.default.data.load.default.service.db}', 1, 'Service.serviceDBAction[]');
    loadDefaultScheduledTaskDetail ('{scheduler.default.data.load.default.service.db}', 2, 'Service.vacuumDBAction[]');        
}
